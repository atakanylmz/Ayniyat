// <auto-generated />
using System;
using Ayniyat.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Ayniyat.Dal.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20240813095431_Baslangic")]
    partial class Baslangic
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ayniyat")
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ayniyat.Models.Entities.Daire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Daireler", "ayniyat");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Bilgi İşlem Dairesi Başkanlığı"
                        });
                });

            modelBuilder.Entity("Ayniyat.Models.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Aktifmi")
                        .HasColumnType("boolean");

                    b.Property<string>("Eposta")
                        .HasColumnType("text");

                    b.Property<int>("RolId")
                        .HasColumnType("integer");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SubeId")
                        .HasColumnType("integer");

                    b.Property<string>("Unvan")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.HasIndex("SubeId");

                    b.ToTable("Kullanicilar", "ayniyat");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Atakan",
                            Aktifmi = true,
                            Eposta = "atakan.yilmaz@kgm.gov.tr",
                            RolId = 1,
                            Soyad = "YILMAZ",
                            SubeId = 1,
                            Unvan = "UYGULAMA GELİŞTİRME TEKNİK ELEMANI"
                        },
                        new
                        {
                            Id = 2,
                            Ad = "Uğur",
                            Aktifmi = true,
                            Eposta = "uafsar@kgm.gov.tr",
                            RolId = 2,
                            Soyad = "AFŞAR",
                            SubeId = 1,
                            Unvan = "TAŞINIR KAYIT KONTROL YETKİLİSİ"
                        },
                        new
                        {
                            Id = 3,
                            Ad = "CBS",
                            Aktifmi = true,
                            RolId = 4,
                            Soyad = "TOPLANTI SALONU",
                            SubeId = 3,
                            Unvan = "TOPLANTI SALONU"
                        },
                        new
                        {
                            Id = 4,
                            Ad = "Ağ Sist.",
                            Aktifmi = true,
                            RolId = 4,
                            Soyad = "TOPLANTI SALONU",
                            SubeId = 3,
                            Unvan = "TOPLANTI SALONU"
                        });
                });

            modelBuilder.Entity("Ayniyat.Models.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roller", "ayniyat");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "Sistemdeki özellikleri belirler",
                            Ad = "SisYon"
                        },
                        new
                        {
                            Id = 2,
                            Aciklama = "Ayniyatçı",
                            Ad = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            Aciklama = "Üzerine zimmet yapılan kişi",
                            Ad = "Personel"
                        },
                        new
                        {
                            Id = 4,
                            Aciklama = "Kişiye zimmetlenemeyen durumlar",
                            Ad = "OrtakAlan"
                        });
                });

            modelBuilder.Entity("Ayniyat.Models.Entities.Sube", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DaireId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DaireId");

                    b.ToTable("Subeler", "ayniyat");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Yazılım Geliştirme Şubesi Müdürlüğü",
                            DaireId = 1
                        },
                        new
                        {
                            Id = 2,
                            Ad = "​​​​​​​​​​​​​​​​​​​​​​​Ağ ve Sistem Yönetimi Şubesi Müdürlüğü",
                            DaireId = 1
                        },
                        new
                        {
                            Id = 3,
                            Ad = "Coğrafi Bilgi Teknolojileri Şubesi Müdürlüğü",
                            DaireId = 1
                        });
                });

            modelBuilder.Entity("Ayniyat.Models.Entities.Zimmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<string>("Birim")
                        .HasColumnType("text");

                    b.Property<string>("EnvanterNo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("KaldirilmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("integer");

                    b.Property<string>("MalzemeAd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Miktar")
                        .HasColumnType("integer");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<string>("SeriNo")
                        .HasColumnType("text");

                    b.Property<int?>("StokNo")
                        .HasColumnType("integer");

                    b.Property<int>("SubeId")
                        .HasColumnType("integer");

                    b.Property<string>("TasinirNo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("SubeId");

                    b.ToTable("Zimmetler", "ayniyat");
                });

            modelBuilder.Entity("Ayniyat.Models.Entities.ZimmetLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<string>("Birim")
                        .HasColumnType("text");

                    b.Property<string>("EnvanterNo")
                        .HasColumnType("text");

                    b.Property<DateTime>("IslemTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MalzemeAd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Miktar")
                        .HasColumnType("integer");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<string>("SeriNo")
                        .HasColumnType("text");

                    b.Property<int?>("StokNo")
                        .HasColumnType("integer");

                    b.Property<string>("TasinirNo")
                        .HasColumnType("text");

                    b.Property<int>("ZimmetId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ZimmetId");

                    b.ToTable("ZimmetLoglari", "ayniyat");
                });

            modelBuilder.Entity("Ayniyat.Models.Entities.Kullanici", b =>
                {
                    b.HasOne("Ayniyat.Models.Entities.Rol", "Rol")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ayniyat.Models.Entities.Sube", "Sube")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("SubeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Sube");
                });

            modelBuilder.Entity("Ayniyat.Models.Entities.Sube", b =>
                {
                    b.HasOne("Ayniyat.Models.Entities.Daire", "Daire")
                        .WithMany("Subeler")
                        .HasForeignKey("DaireId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Daire");
                });

            modelBuilder.Entity("Ayniyat.Models.Entities.Zimmet", b =>
                {
                    b.HasOne("Ayniyat.Models.Entities.Kullanici", "Kullanici")
                        .WithMany("Zimmetler")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Ayniyat.Models.Entities.Sube", "Sube")
                        .WithMany("Zimmetler")
                        .HasForeignKey("SubeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Sube");
                });

            modelBuilder.Entity("Ayniyat.Models.Entities.ZimmetLog", b =>
                {
                    b.HasOne("Ayniyat.Models.Entities.Zimmet", "Zimmet")
                        .WithMany("ZimmetLoglari")
                        .HasForeignKey("ZimmetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Zimmet");
                });

            modelBuilder.Entity("Ayniyat.Models.Entities.Daire", b =>
                {
                    b.Navigation("Subeler");
                });

            modelBuilder.Entity("Ayniyat.Models.Entities.Kullanici", b =>
                {
                    b.Navigation("Zimmetler");
                });

            modelBuilder.Entity("Ayniyat.Models.Entities.Rol", b =>
                {
                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("Ayniyat.Models.Entities.Sube", b =>
                {
                    b.Navigation("Kullanicilar");

                    b.Navigation("Zimmetler");
                });

            modelBuilder.Entity("Ayniyat.Models.Entities.Zimmet", b =>
                {
                    b.Navigation("ZimmetLoglari");
                });
#pragma warning restore 612, 618
        }
    }
}
